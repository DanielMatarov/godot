<?xml version="1.0" encoding="UTF-8" ?>
<class name="Quat" category="Built-In Types" version="3.1">
	<brief_description>
		Quaternion.
	</brief_description>
	<description>
		A unit quaternion used for representing 3D rotations.
		It is similar to [Basis], which implements matrix representation of rotations, and can be parametrized using both an axis-angle pair or Euler angles. But due to its compactness and the way it is stored in memory, certain operations (obtaining axis-angle and performing SLERP, in particular) are more efficient and robust against floating point errors.
		Quaternions need to be (re)normalized.
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="Quat">
			<return type="Quat">
			</return>
			<argument index="0" name="x" type="float">
			</argument>
			<argument index="1" name="y" type="float">
			</argument>
			<argument index="2" name="z" type="float">
			</argument>
			<argument index="3" name="w" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="Quat">
			<return type="Quat">
			</return>
			<argument index="0" name="axis" type="Vector3">
			</argument>
			<argument index="1" name="angle" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="Quat">
			<return type="Quat">
			</return>
			<argument index="0" name="from" type="Basis">
			</argument>
			<description>
			</description>
		</method>
		<method name="cubic_slerp">
			<return type="Quat">
			</return>
			<argument index="0" name="b" type="Quat">
			</argument>
			<argument index="1" name="pre_a" type="Quat">
			</argument>
			<argument index="2" name="post_b" type="Quat">
			</argument>
			<argument index="3" name="t" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="dot">
			<return type="float">
			</return>
			<argument index="0" name="b" type="Quat">
			</argument>
			<description>
			</description>
		</method>
		<method name="inverse">
			<return type="Quat">
			</return>
			<description>
			</description>
		</method>
		<method name="is_normalized">
			<return type="bool">
			</return>
			<description>
			</description>
		</method>
		<method name="length">
			<return type="float">
			</return>
			<description>
			</description>
		</method>
		<method name="length_squared">
			<return type="float">
			</return>
			<description>
			</description>
		</method>
		<method name="normalized">
			<return type="Quat">
			</return>
			<description>
			</description>
		</method>
		<method name="slerp">
			<return type="Quat">
			</return>
			<argument index="0" name="b" type="Quat">
			</argument>
			<argument index="1" name="t" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="slerpni">
			<return type="Quat">
			</return>
			<argument index="0" name="b" type="Quat">
			</argument>
			<argument index="1" name="t" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="xform">
			<return type="Vector3">
			</return>
			<argument index="0" name="v" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="w" type="float" setter="" getter="">
		</member>
		<member name="x" type="float" setter="" getter="">
		</member>
		<member name="y" type="float" setter="" getter="">
		</member>
		<member name="z" type="float" setter="" getter="">
		</member>
	</members>
	<constants>
	</constants>
</class>
