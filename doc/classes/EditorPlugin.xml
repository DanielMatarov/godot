<?xml version="1.0" encoding="UTF-8" ?>
<class name="EditorPlugin" inherits="Node" category="Core" version="3.1">
	<brief_description>
		Used by the editor to extend its functionality.
	</brief_description>
	<description>
		Plugins are used by the editor to extend functionality. The most common types of plugins are those which edit a given node or resource type, import plugins and export plugins.
	</description>
	<tutorials>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="add_autoload_singleton">
			<return type="void">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<argument index="1" name="path" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_control_to_bottom_panel">
			<return type="ToolButton">
			</return>
			<argument index="0" name="control" type="Control">
			</argument>
			<argument index="1" name="title" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_control_to_container">
			<return type="void">
			</return>
			<argument index="0" name="container" type="int" enum="EditorPlugin.CustomControlContainer">
			</argument>
			<argument index="1" name="control" type="Control">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_control_to_dock">
			<return type="void">
			</return>
			<argument index="0" name="slot" type="int" enum="EditorPlugin.DockSlot">
			</argument>
			<argument index="1" name="control" type="Control">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_custom_type">
			<return type="void">
			</return>
			<argument index="0" name="type" type="String">
			</argument>
			<argument index="1" name="base" type="String">
			</argument>
			<argument index="2" name="script" type="Script">
			</argument>
			<argument index="3" name="icon" type="Texture">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_export_plugin">
			<return type="void">
			</return>
			<argument index="0" name="exporter" type="EditorExportPlugin">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_import_plugin">
			<return type="void">
			</return>
			<argument index="0" name="importer" type="EditorImportPlugin">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_scene_import_plugin">
			<return type="void">
			</return>
			<argument index="0" name="scene_importer" type="EditorSceneImporter">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_tool_menu_item">
			<return type="void">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<argument index="1" name="handler" type="Object">
			</argument>
			<argument index="2" name="callback" type="String">
			</argument>
			<argument index="3" name="ud" type="Variant" default="null">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_tool_submenu_item">
			<return type="void">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<argument index="1" name="submenu" type="Object">
			</argument>
			<description>
			</description>
		</method>
		<method name="apply_changes" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="clear" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="create_spatial_gizmo" qualifiers="virtual">
			<return type="EditorSpatialGizmo">
			</return>
			<argument index="0" name="for_spatial" type="Spatial">
			</argument>
			<description>
			</description>
		</method>
		<method name="edit" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="object" type="Object">
			</argument>
			<description>
			</description>
		</method>
		<method name="forward_canvas_gui_input" qualifiers="virtual">
			<return type="bool">
			</return>
			<argument index="0" name="event" type="InputEvent">
			</argument>
			<description>
			</description>
		</method>
		<method name="forward_draw_over_viewport" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="overlay" type="Control">
			</argument>
			<description>
			</description>
		</method>
		<method name="forward_force_draw_over_viewport" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="overlay" type="Control">
			</argument>
			<description>
			</description>
		</method>
		<method name="forward_spatial_gui_input" qualifiers="virtual">
			<return type="bool">
			</return>
			<argument index="0" name="camera" type="Camera">
			</argument>
			<argument index="1" name="event" type="InputEvent">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_breakpoints" qualifiers="virtual">
			<return type="PoolStringArray">
			</return>
			<description>
			</description>
		</method>
		<method name="get_editor_interface">
			<return type="EditorInterface">
			</return>
			<description>
			</description>
		</method>
		<method name="get_plugin_icon" qualifiers="virtual">
			<return type="Object">
			</return>
			<description>
			</description>
		</method>
		<method name="get_plugin_name" qualifiers="virtual">
			<return type="String">
			</return>
			<description>
			</description>
		</method>
		<method name="get_state" qualifiers="virtual">
			<return type="Dictionary">
			</return>
			<description>
			</description>
		</method>
		<method name="get_undo_redo">
			<return type="UndoRedo">
			</return>
			<description>
			</description>
		</method>
		<method name="get_window_layout" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="layout" type="ConfigFile">
			</argument>
			<description>
			</description>
		</method>
		<method name="handles" qualifiers="virtual">
			<return type="bool">
			</return>
			<argument index="0" name="object" type="Object">
			</argument>
			<description>
			</description>
		</method>
		<method name="has_main_screen" qualifiers="virtual">
			<return type="bool">
			</return>
			<description>
			</description>
		</method>
		<method name="hide_bottom_panel">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="make_bottom_panel_item_visible">
			<return type="void">
			</return>
			<argument index="0" name="item" type="Control">
			</argument>
			<description>
			</description>
		</method>
		<method name="make_visible" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="visible" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="queue_save_layout" qualifiers="const">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="remove_autoload_singleton">
			<return type="void">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_control_from_bottom_panel">
			<return type="void">
			</return>
			<argument index="0" name="control" type="Control">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_control_from_container">
			<return type="void">
			</return>
			<argument index="0" name="container" type="int" enum="EditorPlugin.CustomControlContainer">
			</argument>
			<argument index="1" name="control" type="Control">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_control_from_docks">
			<return type="void">
			</return>
			<argument index="0" name="control" type="Control">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_custom_type">
			<return type="void">
			</return>
			<argument index="0" name="type" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_export_plugin">
			<return type="void">
			</return>
			<argument index="0" name="exporter" type="EditorExportPlugin">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_import_plugin">
			<return type="void">
			</return>
			<argument index="0" name="importer" type="EditorImportPlugin">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_scene_import_plugin">
			<return type="void">
			</return>
			<argument index="0" name="scene_importer" type="EditorSceneImporter">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_tool_menu_item">
			<return type="void">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="save_external_data" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="set_force_draw_over_forwarding_enabled">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="set_input_event_forwarding_always_enabled">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="set_state" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="state" type="Dictionary">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_window_layout" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="layout" type="ConfigFile">
			</argument>
			<description>
			</description>
		</method>
		<method name="update_overlays" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
	</methods>
	<signals>
		<signal name="main_screen_changed">
			<argument index="0" name="screen_name" type="String">
			</argument>
			<description>
			</description>
		</signal>
		<signal name="resource_saved">
			<argument index="0" name="resource" type="Object">
			</argument>
			<description>
			</description>
		</signal>
		<signal name="scene_changed">
			<argument index="0" name="scene_root" type="Object">
			</argument>
			<description>
			</description>
		</signal>
		<signal name="scene_closed">
			<argument index="0" name="filepath" type="String">
			</argument>
			<description>
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="CONTAINER_TOOLBAR" value="0" enum="CustomControlContainer">
		</constant>
		<constant name="CONTAINER_SPATIAL_EDITOR_MENU" value="1" enum="CustomControlContainer">
		</constant>
		<constant name="CONTAINER_SPATIAL_EDITOR_SIDE" value="2" enum="CustomControlContainer">
		</constant>
		<constant name="CONTAINER_SPATIAL_EDITOR_BOTTOM" value="3" enum="CustomControlContainer">
		</constant>
		<constant name="CONTAINER_CANVAS_EDITOR_MENU" value="4" enum="CustomControlContainer">
		</constant>
		<constant name="CONTAINER_CANVAS_EDITOR_SIDE" value="5" enum="CustomControlContainer">
		</constant>
		<constant name="CONTAINER_CANVAS_EDITOR_BOTTOM" value="6" enum="CustomControlContainer">
		</constant>
		<constant name="CONTAINER_PROPERTY_EDITOR_BOTTOM" value="7" enum="CustomControlContainer">
		</constant>
		<constant name="DOCK_SLOT_LEFT_UL" value="0" enum="DockSlot">
		</constant>
		<constant name="DOCK_SLOT_LEFT_BL" value="1" enum="DockSlot">
		</constant>
		<constant name="DOCK_SLOT_LEFT_UR" value="2" enum="DockSlot">
		</constant>
		<constant name="DOCK_SLOT_LEFT_BR" value="3" enum="DockSlot">
		</constant>
		<constant name="DOCK_SLOT_RIGHT_UL" value="4" enum="DockSlot">
		</constant>
		<constant name="DOCK_SLOT_RIGHT_BL" value="5" enum="DockSlot">
		</constant>
		<constant name="DOCK_SLOT_RIGHT_UR" value="6" enum="DockSlot">
		</constant>
		<constant name="DOCK_SLOT_RIGHT_BR" value="7" enum="DockSlot">
		</constant>
		<constant name="DOCK_SLOT_MAX" value="8" enum="DockSlot">
		</constant>
	</constants>
</class>
